{
  "title": "RabbitMQ",
  "description": "An open-source message broker that implements the Advanced Message Queuing Protocol (AMQP).",
  "apiVersion": "2023-02-07",
  "type": "rabbitmq",
  "category": "broker",
  "image": "https://assets.buildable.dev/catalog/node-templates/rabbitmq.svg",
  "tags": ["queue", "message broker"],
  "authentication": [
    {
      "name": "RABBITMQ_CONNECTION_URI",
      "label": "Enter your RabbitMQ connection URI",
      "placeholder": "amqps://username:password@host/ytbqyshy"
    },
    {
      "name": "RABBITMQ_QUEUES",
      "label": "Enter your comma separated RabbitMQ queues",
      "placeholder": "payments_queue, customers_queue"
    }
  ],
  "eventSchema": {},
  "settings": {
    "createBuildableEnvVars": false,
    "autoSubscribeAllEvents": true,
    "showEvents": true,
    "secureAuthFields": true
  },
  "paths": {
    "id": null,
    "event": "_.body.event",
    "payload": "_.body",
    "secret": null,
    "signature": null
  },
  "events": [
    {
      "name": "connection.established",
      "description": "Fired when a connection is established to RabbitMQ.",
      "group": "connection"
    },
    {
      "name": "connection.failed",
      "description": "Fired when a connection to RabbitMQ fails.",
      "group": "connection"
    },
    {
      "name": "connection.disconnected",
      "description": "Fired when a connection to RabbitMQ is disconnected.",
      "group": "connection"
    },
    {
      "name": "channel.connection.established",
      "description": "Fired when a connection is established to the channel.",
      "group": "channel"
    },
    {
      "name": "channel.connection.failed",
      "description": "Fired when a connection to the channel fails.",
      "group": "channel"
    },
    {
      "name": "consumer.connection.established",
      "description": "Fired when a connection is established to the consumer.",
      "group": "consumer"
    },
    {
      "name": "consumer.connection.failed",
      "description": "Fired when a connection to the consumer fails.",
      "group": "consumer"
    },
    {
      "name": "queue.connection.established",
      "description": "Fired when a connection is established to the queue.",
      "group": "queue"
    },
    {
      "name": "queue.connection.failed",
      "description": "Fired when a connection to the queue fails.",
      "group": "queue"
    },
    {
      "name": "heartbeat.received",
      "description": "Fired when a message is received.",
      "group": "message"
    },
    {
      "name": "message.received",
      "description": "Fired when a message is received.",
      "group": "message"
    }
  ],
  "connectionTypes": ["source"],
  "testConnection": true,
  "classifications": {
    "dataIngestion": {
      "streamTypes": ["manual"],
      "extractionTypes": []
    }
  }
}
