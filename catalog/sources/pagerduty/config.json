{
  "title": "PagerDuty",
  "description": "A cloud computing company specializing in a SaaS incident responses",
  "apiVersion": "Webhooks v3",
  "type": "pagerduty",
  "category": "monitoring",
  "image": "https://assets.buildable.dev/catalog/node-templates/pagerduty.svg",
  "tags": [
    "observability",
    "issues"
  ],
  "authentication": [
    {
      "name": "PAGERDUTY_API_TOKEN",
      "label": "Enter your PagerDuty API Token",
      "placeholder": "y_NbAkKc66ryYTWUXYEu"
    },
    {
      "name": "PAGERDUTY_FILTER_TYPE",
      "type": "select",
      "options": [
        {
          "name": "Account Reference",
          "value": "account_reference"
        },
        {
          "name": "Service Reference",
          "value": "service_reference"
        },
        {
          "name": "Team Reference",
          "value": "team_reference"
        }
      ],
      "label": "Select the Filter Type"
    },
    {
      "name": "PAGERDUTY_FILTER_ID",
      "label": "Enter your PagerDuty Filter ID",
      "subText": "This is not required for the Account Reference Filter Type",
      "placeholder": "P393ZNQ",
      "required": false
    }
  ],
  "eventSchema": {
    "event": {
      "id": "5ac64822-4adc-4fda-ade0-410becf0de4f",
      "event_type": "incident.priority_updated",
      "resource_type": "incident",
      "occurred_at": "2020-10-02T18:45:22.169Z",
      "agent": {
        "html_url": "https://acme.pagerduty.com/users/PLH1HKV",
        "id": "PLH1HKV",
        "self": "https://api.pagerduty.com/users/PLH1HKV",
        "summary": "Tenex Engineer",
        "type": "user_reference"
      },
      "client": {
        "name": "PagerDuty"
      },
      "data": {
        "id": "PGR0VU2",
        "type": "incident",
        "self": "https://api.pagerduty.com/incidents/PGR0VU2",
        "html_url": "https://acme.pagerduty.com/incidents/PGR0VU2",
        "number": 2,
        "status": "triggered",
        "incident_key": "d3640fbd41094207a1c11e58e46b1662",
        "created_at": "2020-04-09T15:16:27Z",
        "title": "A little bump in the road",
        "service": {
          "html_url": "https://acme.pagerduty.com/services/PF9KMXH",
          "id": "PF9KMXH",
          "self": "https://api.pagerduty.com/services/PF9KMXH",
          "summary": "API Service",
          "type": "service_reference"
        },
        "assignees": [
          {
            "html_url": "https://acme.pagerduty.com/users/PTUXL6G",
            "id": "PTUXL6G",
            "self": "https://api.pagerduty.com/users/PTUXL6G",
            "summary": "User 123",
            "type": "user_reference"
          }
        ],
        "escalation_policy": {
          "html_url": "https://acme.pagerduty.com/escalation_policies/PUS0KTE",
          "id": "PUS0KTE",
          "self": "https://api.pagerduty.com/escalation_policies/PUS0KTE",
          "summary": "Default",
          "type": "escalation_policy_reference"
        },
        "teams": [
          {
            "html_url": "https://acme.pagerduty.com/teams/PFCVPS0",
            "id": "PFCVPS0",
            "self": "https://api.pagerduty.com/teams/PFCVPS0",
            "summary": "Engineering",
            "type": "team_reference"
          }
        ],
        "priority": {
          "html_url": "https://acme.pagerduty.com/account/incident_priorities",
          "id": "PSO75BM",
          "self": "https://api.pagerduty.com/priorities/PSO75BM",
          "summary": "P1",
          "type": "priority_reference"
        },
        "urgency": "high",
        "conference_bridge": {
          "conference_number": "+1 1234123412,,987654321#",
          "conference_url": "https://example.com"
        },
        "resolve_reason": null
      }
    }
  },
  "settings": {
    "parseWebhookBody": false,
    "hasSubscriptionDelay": false,
    "subscriptionDelayMultiplier": 0.0,
    "showEvents": true
  },
  "paths": {
    "id": "_.body.id",
    "event": "_.body.event.event_type",
    "payload": "_.body.event.data",
    "secret": "_.body.delivery_method.secret",
    "signature": "_.headers.X-PagerDuty-Signature"
  },
  "connectionTypes": ["source"],
  "events": [
    {
      "name": "incident.acknowledged",
      "description": "Sent when an incident is acknowledged.",
      "group": ""
    },
    {
      "name": "incident.annotated",
      "description": "Sent when a note is added to an incident.",
      "group": ""
    },
    {
      "name": "incident.delegated",
      "description": "Sent when an incident has been reassigned to another escalation policy.",
      "group": ""
    },
    {
      "name": "incident.escalated",
      "description": "Sent when an incident has been escalated to another user in the same escalation level.",
      "group": ""
    },
    {
      "name": "incident.priority_updated",
      "description": "Sent when the priority of an incident has changed.",
      "group": ""
    },
    {
      "name": "incident.reassigned",
      "description": "Sent when an incident has been reassigned to another user.",
      "group": ""
    },
    {
      "name": "incident.reopened",
      "description": "Sent when an incident is reopened.",
      "group": ""
    },
    {
      "name": "incident.resolved",
      "description": "Sent when an incident has been resolved.",
      "group": ""
    },
    {
      "name": "incident.responder.added",
      "description": "Sent when a responder has been added to an incident.",
      "group": ""
    },
    {
      "name": "incident.responder.replied",
      "description": "Sent when a responder replies to a request.",
      "group": ""
    },
    {
      "name": "incident.status_update_published",
      "description": "Sent when a status update is added to an incident.",
      "group": ""
    },
    {
      "name": "incident.triggered",
      "description": "Sent when an incident is newly created/triggered.",
      "group": ""
    },
    {
      "name": "incident.unacknowledged",
      "description": "Sent when an incident is unacknowledged.",
      "group": ""
    },
    {
      "name": "service.created",
      "description": "Sent when a service is created.",
      "group": ""
    },
    {
      "name": "service.deleted",
      "description": "Sent when a service is deleted.",
      "group": ""
    },
    {
      "name": "service.updated",
      "description": "Sent when a service is updated.",
      "group": ""
    }
  ]
}
